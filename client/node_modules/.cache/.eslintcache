[{"/Users/nafisa/final-project-telegran/client/src/index.js":"1","/Users/nafisa/final-project-telegran/client/src/reportWebVitals.js":"2","/Users/nafisa/final-project-telegran/client/src/App.jsx":"3","/Users/nafisa/final-project-telegran/client/src/components/Home.jsx":"4","/Users/nafisa/final-project-telegran/client/src/components/Connect.jsx":"5","/Users/nafisa/final-project-telegran/client/src/components/Navbar.jsx":"6","/Users/nafisa/final-project-telegran/client/src/components/Welcome.jsx":"7","/Users/nafisa/final-project-telegran/client/src/components/Success.jsx":"8","/Users/nafisa/final-project-telegran/client/src/components/Messages.jsx":"9","/Users/nafisa/final-project-telegran/client/src/components/Write.jsx":"10","/Users/nafisa/final-project-telegran/client/src/components/Speak.jsx":"11","/Users/nafisa/final-project-telegran/client/src/components/Tutorial.jsx":"12","/Users/nafisa/final-project-telegran/client/src/components/Video.jsx":"13","/Users/nafisa/final-project-telegran/client/src/components/Emergency.jsx":"14","/Users/nafisa/final-project-telegran/client/src/components/Button.style.js":"15","/Users/nafisa/final-project-telegran/client/src/components/Container.style.js":"16","/Users/nafisa/final-project-telegran/client/src/components/Nav.style.js":"17"},{"size":484,"mtime":1622630967002,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1622546785157,"results":"20","hashOfConfig":"19"},{"size":1846,"mtime":1622726159429,"results":"21","hashOfConfig":"19"},{"size":480,"mtime":1622727491433,"results":"22","hashOfConfig":"19"},{"size":675,"mtime":1622727759248,"results":"23","hashOfConfig":"19"},{"size":1029,"mtime":1622729450236,"results":"24","hashOfConfig":"19"},{"size":382,"mtime":1622728436972,"results":"25","hashOfConfig":"19"},{"size":260,"mtime":1622726159429,"results":"26","hashOfConfig":"19"},{"size":181,"mtime":1622630966999,"results":"27","hashOfConfig":"19"},{"size":2325,"mtime":1622726159430,"results":"28","hashOfConfig":"19"},{"size":1660,"mtime":1622712993516,"results":"29","hashOfConfig":"19"},{"size":589,"mtime":1622726159429,"results":"30","hashOfConfig":"19"},{"size":562,"mtime":1622726159430,"results":"31","hashOfConfig":"19"},{"size":487,"mtime":1622726159429,"results":"32","hashOfConfig":"19"},{"size":201,"mtime":1622727792129,"results":"33","hashOfConfig":"19"},{"size":238,"mtime":1622727584326,"results":"34","hashOfConfig":"19"},{"size":198,"mtime":1622728776920,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1huiyxy",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nafisa/final-project-telegran/client/src/index.js",[],["83","84"],"/Users/nafisa/final-project-telegran/client/src/reportWebVitals.js",[],"/Users/nafisa/final-project-telegran/client/src/App.jsx",["85"],"import React from \"react\";\nimport Navbar from \"../../client/src/components/Navbar\";\n// import logo from \"./logo.png\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home.jsx\";\nimport Connect from \"./components/Connect.jsx\";\nimport Video from \"./components/Video.jsx\";\nimport Tutorial from \"./components/Tutorial.jsx\";\nimport Welcome from \"./components/Welcome.jsx\";\nimport Success from \"./components/Success.jsx\";\nimport Messages from \"./components/Messages.jsx\";\nimport Speak from \"./components/Speak.jsx\";\nimport Write from \"./components/Write.jsx\";\nimport Emergency from \"./components/Emergency.jsx\";\n\nfunction App() {\n  const [messageContent, setMessageContent] = React.useState(\"\");\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={() => <Home />} />\n          <Route path=\"/connect\" exact component={() => <Connect />} />\n          <Route\n            path=\"/connection-success\"\n            exact\n            component={() => <Success />}\n          />\n          <Route path=\"/video\" exact component={() => <Video />} />\n          <Route path=\"/tutorial\" exact component={() => <Tutorial />} />\n          <Route path=\"/welcome\" exact component={() => <Welcome />} />\n          <Route path=\"/messages\" exact component={() => <Messages />} />\n          <Route path=\"/speak\" exact component={() => <Speak />} />\n          <Route\n            path=\"/write\"\n            exact\n            component={() => (\n              <Write\n                messageContent={messageContent}\n                setMessageContent={setMessageContent}\n              />\n            )}\n          />\n          <Route path=\"/emergency\" exact component={() => <Emergency />} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/nafisa/final-project-telegran/client/src/components/Home.jsx",["86"],"import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport logo from \"../logo.png\";\nimport { Button } from \"./Button.style.js\";\nimport { AppContainer } from \"./Container.style\";\n\nfunction Home() {\n  return (\n    <AppContainer>\n      <header>\n        <img src={logo} alt=\"logo\" />\n      </header>\n\n      <Button type=\"submit\">\n        {\" \"}\n        <Link to=\"/connect\">Get Started</Link>\n      </Button>\n    </AppContainer>\n  );\n}\n\nexport default Home;\n","/Users/nafisa/final-project-telegran/client/src/components/Connect.jsx",["87"],"import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport logo from \"../logo.png\";\nimport { Button } from \"./Button.style.js\";\nimport { AppContainer } from \"./Container.style\";\n\nfunction Connect() {\n  return (\n    <AppContainer>\n      <header>\n        <img src={logo} alt=\"logo\" />\n        {/* <p>{!data ? \"Loading...\" : data}</p> */}\n      </header>\n      <h1>Connect to Slack Workspace</h1>\n      <form>\n        <label>Workspace ID:</label>\n        <input></input>\n      </form>\n      <Button type=\"submit\">\n        {\" \"}\n        <Link to=\"/connection-success\">Connect</Link>\n      </Button>\n    </AppContainer>\n  );\n}\n\nexport default Connect;\n","/Users/nafisa/final-project-telegran/client/src/components/Navbar.jsx",["88","89","90"],"import React, { useState } from \"react\";\nimport envelope from \"../images/envelope.svg\";\nimport sos from \"../images/sos.svg\";\nimport write from \"../images/write.svg\";\nimport \"../global.css\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { NavContainer } from \"./Nav.style.js\";\nimport styled from \"styled-components\";\n\nconst linkStyle = {\n  textDecoration: \"none\",\n  fontFamily: \"Epilogue\",\n};\n\nfunction Navbar(props) {\n  return (\n    <NavContainer>\n      <div className=\"nav\">\n        <Link to=\"/messages\" style={linkStyle}>\n          <img src={envelope} alt=\"envelope\" className=\"icon\"></img>\n          <div>Messages</div>\n        </Link>\n        <Link to=\"/write\" style={linkStyle}>\n          <img src={write} alt=\"write\" className=\"icon\"></img>\n          <div>Write</div>\n        </Link>\n        <Link to=\"/emergency\" style={linkStyle}>\n          <img src={sos} alt=\"emergency\" className=\"icon\"></img>\n          <div>Emergency</div>\n        </Link>\n      </div>\n    </NavContainer>\n  );\n}\n\nexport default Navbar;\n","/Users/nafisa/final-project-telegran/client/src/components/Welcome.jsx",["91","92"],"import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport logo from \"../logo.png\";\nimport Nav from \"./Navbar.jsx\";\nimport { AppContainer } from \"./Container.style\";\n\nfunction Welcome() {\n  return (\n    <AppContainer>\n      <header>\n        <img src={logo} alt=\"logo\" />\n      </header>\n\n      <Nav />\n    </AppContainer>\n  );\n}\n\nexport default Welcome;\n","/Users/nafisa/final-project-telegran/client/src/components/Success.jsx",["93"],"import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nfunction Success() {\n  return (\n    <div>\n      <h1>\n        {\" \"}\n        <Link to=\"/video\">Successfully Connected </Link>\n      </h1>\n    </div>\n  );\n}\n\nexport default Success;\n","/Users/nafisa/final-project-telegran/client/src/components/Messages.jsx",["94","95"],"import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Nav from \"./Navbar.jsx\";\n\nfunction Messages() {\n  return <Nav />;\n}\n\nexport default Messages;\n","/Users/nafisa/final-project-telegran/client/src/components/Write.jsx",["96","97","98","99","100"],"import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Nav from \"./Navbar.jsx\";\nimport voice from \"../images/voice.svg\";\nimport send from \"../images/send.svg\";\nimport profile from \"../images/profile.svg\";\nconst fetch = require(\"node-fetch\");\nconst dotenv = require(\"dotenv\");\ndotenv.config();\n\nfunction Write({ messageContent, setMessageContent }) {\n  let testMessage = {\n    channel: `${process.env.SLACK_CHANNEL_ID}`,\n    text: `${messageContent}`,\n  };\n\n  function sendSlackbotStartMsg(messageData) {\n    fetch(`${process.env.INCOMING_WEBHOOK_URL}`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: \"Bearer \" + process.env.BOT_USER_OAUTH_TOKEN,\n      },\n      body: JSON.stringify(messageData),\n    })\n      .then((response) => {\n        if (!response.ok) throw new Error(response.status);\n        return response;\n      })\n      .then((res) => console.log(res.status, res.statusText))\n      .catch((error) => console.error(error));\n  }\n\n  return (\n    <>\n      <button>\n        <a href=\"/messages\">Go back</a>\n      </button>\n      <div className=\"messageContainer\">\n        <div className=\"messageTo\">\n          To: Jo\n          <img className=\"avatar\" src={profile}></img>\n        </div>\n        <form\n          action=\"#\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            console.log(e.target.value);\n            setMessageContent(e.target.value);\n          }}\n        >\n          <textarea placeholder=\"Start typing...\"></textarea>\n          <button type=\"submit\">\n            <a href=\"/success\">\n              <img src={send}></img>\n              Send\n            </a>\n          </button>\n          <button\n            type=\"submit\"\n            onSubmit={(e) => {\n              e.preventDefault();\n              console.log(\"works\");\n              sendSlackbotStartMsg(testMessage);\n            }}\n          >\n            Test Button\n          </button>\n        </form>\n        <div className=\"msgButtons\">\n          <a href=\"/speak\">\n            {/* we should change this to be state based rather than page */}\n            <img src={voice}></img>\n            <span>Press here to speak your message </span>\n          </a>\n        </div>\n      </div>\n      <Nav />\n    </>\n  );\n}\n\nexport default Write;\n","/Users/nafisa/final-project-telegran/client/src/components/Speak.jsx",["101"],"import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Nav from \"./Navbar.jsx\";\nimport microphone from \"../images/microphone.svg\";\nimport write from \"../images/write.svg\";\n\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from \"react-speech-recognition\";\n\nfunction Speak() {\n  const { transcript, resetTranscript } = useSpeechRecognition();\n\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return (\n      <h1>Your browser does not support Speech recognition. </h1>\n    );\n  }\n\n  // const [recording, setRecording] = React.useState(false);\n  function toggleRecording() {\n    // setRecording(!recording);\n  }\n  return (\n    <div>\n      <p>Go back</p>\n      <p>To: </p>\n      <div className=\"spokenWords\">\n        <button\n          onClick={SpeechRecognition.startListening({\n            continuous: true,\n          })}\n        >\n          Start\n        </button>\n        <button onClick={SpeechRecognition.stopListening}>Stop</button>\n        <button onClick={resetTranscript}>Reset</button>\n\n        <button id=\"microphone\" onClick={toggleRecording}>\n          Recording\n        </button>\n        <img src={microphone} alt=\"microphone\" className=\"icon\"></img>\n        {/* <button id=\"stopRecording\">Stop Recording</button>\n           <img src={microphone} alt=\"microphone\" className=\"icon\"></img>  */}\n      </div>\n      <p>Press here to type your message</p>\n      <p>{transcript}</p>\n      <Link to=\"/write\">\n        <img src={write} alt=\"write\" className=\"icon\"></img>\n        <div>Write</div>\n      </Link>\n      <button id=\"send\">Send</button>\n      <Nav />;\n    </div>\n  );\n}\n\nexport default Speak;\n","/Users/nafisa/final-project-telegran/client/src/components/Tutorial.jsx",["102"],"import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nfunction Tutorial() {\n  return (\n    <>\n      <h1>Tutorial</h1>\n      <div>\n        <ol>\n          <li>text</li>\n          <li>text</li>\n          <li>text</li>\n          <li>text</li>\n          <li>text</li>\n        </ol>\n        <div>\n          <button type=\"submit\">\n            <Link to=\"/video\">Video Tutorial</Link>\n          </button>\n          <button type=\"submit\">\n            <Link to=\"/welcome\">Skip</Link>\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Tutorial;\n","/Users/nafisa/final-project-telegran/client/src/components/Video.jsx",["103"],"import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nfunction Video() {\n  return (\n    <>\n      <h1>Tutorial</h1>\n      <div>\n        <video width=\"320\" height=\"240\" controls>\n          <source src=\"movie.mp4\" type=\"video/mp4\" />\n        </video>\n        <div>\n          <button type=\"submit\">\n            <Link to=\"/tutorial\">Written Tutorial</Link>\n          </button>\n          <button type=\"submit\">\n            <Link to=\"/welcome\">Skip</Link>\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Video;\n","/Users/nafisa/final-project-telegran/client/src/components/Emergency.jsx",["104"],"import React from \"react\";\nimport cancel from \"../images/cancel-sos.svg\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Nav from \"./Navbar.jsx\";\n\nfunction Emergency() {\n  return (\n    <div>\n      <div>\n        <p>Sending SOS in 10 seconds</p>\n        <img src={cancel} alt=\"logo\" />\n        <button type=\"submit\">\n          {\" \"}\n          <Link to=\"/welcome\">Cancel SOS Call</Link>\n        </button>\n      </div>\n      <Nav />\n    </div>\n  );\n}\n\nexport default Emergency;\n","/Users/nafisa/final-project-telegran/client/src/components/Button.style.js",[],"/Users/nafisa/final-project-telegran/client/src/components/Container.style.js",[],"/Users/nafisa/final-project-telegran/client/src/components/Nav.style.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":14},{"ruleId":"109","severity":1,"message":"113","line":2,"column":16,"nodeType":"111","messageId":"112","endLine":2,"endColumn":26},{"ruleId":"109","severity":1,"message":"113","line":2,"column":16,"nodeType":"111","messageId":"112","endLine":2,"endColumn":26},{"ruleId":"109","severity":1,"message":"114","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"113","line":6,"column":16,"nodeType":"111","messageId":"112","endLine":6,"endColumn":26},{"ruleId":"109","severity":1,"message":"115","line":8,"column":8,"nodeType":"111","messageId":"112","endLine":8,"endColumn":14},{"ruleId":"109","severity":1,"message":"116","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":14},{"ruleId":"109","severity":1,"message":"113","line":2,"column":16,"nodeType":"111","messageId":"112","endLine":2,"endColumn":26},{"ruleId":"109","severity":1,"message":"113","line":2,"column":16,"nodeType":"111","messageId":"112","endLine":2,"endColumn":26},{"ruleId":"109","severity":1,"message":"116","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":14},{"ruleId":"109","severity":1,"message":"113","line":2,"column":16,"nodeType":"111","messageId":"112","endLine":2,"endColumn":26},{"ruleId":"109","severity":1,"message":"116","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":14},{"ruleId":"109","severity":1,"message":"113","line":2,"column":16,"nodeType":"111","messageId":"112","endLine":2,"endColumn":26},{"ruleId":"117","severity":1,"message":"118","line":42,"column":11,"nodeType":"119","endLine":42,"endColumn":49},{"ruleId":"117","severity":1,"message":"118","line":55,"column":15,"nodeType":"119","endLine":55,"endColumn":31},{"ruleId":"117","severity":1,"message":"118","line":73,"column":13,"nodeType":"119","endLine":73,"endColumn":30},{"ruleId":"109","severity":1,"message":"113","line":2,"column":16,"nodeType":"111","messageId":"112","endLine":2,"endColumn":26},{"ruleId":"109","severity":1,"message":"113","line":2,"column":16,"nodeType":"111","messageId":"112","endLine":2,"endColumn":26},{"ruleId":"109","severity":1,"message":"113","line":2,"column":16,"nodeType":"111","messageId":"112","endLine":2,"endColumn":26},{"ruleId":"109","severity":1,"message":"113","line":3,"column":16,"nodeType":"111","messageId":"112","endLine":3,"endColumn":26},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","'useState' is defined but never used.","'styled' is defined but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]