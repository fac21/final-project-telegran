{"ast":null,"code":"var _jsxFileName = \"/Users/nafisa/final-project-telegran/client/src/components/Speak.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Nav from \"./Navbar.jsx\";\nimport microphone from \"../images/microphone.svg\";\nimport write from \"../images/write.svg\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Speak() {\n  _s();\n\n  const {\n    transcript,\n    resetTranscript\n  } = useSpeechRecognition();\n\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return null;\n  } // const [recording, setRecording] = React.useState(false);\n\n\n  function toggleRecording() {// setRecording(!recording);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Go back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"To: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spokenWords\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: SpeechRecognition.startListening({\n          continuous: true\n        }),\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: SpeechRecognition.stopListening,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTranscript,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"microphone\",\n        onClick: toggleRecording,\n        children: \"Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: microphone,\n        alt: \"microphone\",\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Press here to type your message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: transcript\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/write\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: write,\n        alt: \"write\",\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Write\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"send\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Speak, \"jh1/qkmPhH2Ui4CQVO5LElRfLv0=\", false, function () {\n  return [useSpeechRecognition];\n});\n\n_c = Speak;\nexport default Speak;\n\nvar _c;\n\n$RefreshReg$(_c, \"Speak\");","map":{"version":3,"sources":["/Users/nafisa/final-project-telegran/client/src/components/Speak.jsx"],"names":["React","Link","withRouter","Nav","SpeechRecognition","useSpeechRecognition","Speak","transcript","resetTranscript","browserSupportsSpeechRecognition","toggleRecording","startListening","continuous","stopListening","microphone","write"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,GAAP,MAAgB,cAAhB;;;AAIA,OAAOC,iBAAP,IACEC,oBADF,QAEO,0BAFP;;;AAIA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAkCH,oBAAoB,EAA5D;;AAEA,MAAI,CAACD,iBAAiB,CAACK,gCAAlB,EAAL,EAA2D;AACzD,WAAO,IAAP;AACD,GALc,CAOf;;;AACA,WAASC,eAAT,GAA2B,CACzB;AACD;;AACD,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AACE,QAAA,OAAO,EAAEN,iBAAiB,CAACO,cAAlB,CAAiC;AACxCC,UAAAA,UAAU,EAAE;AAD4B,SAAjC,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAQ,QAAA,OAAO,EAAER,iBAAiB,CAACS,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAQ,QAAA,OAAO,EAAEL,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAWE;AAAQ,QAAA,EAAE,EAAC,YAAX;AAAwB,QAAA,OAAO,EAAEE,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAcE;AAAK,QAAA,GAAG,EAAEI,UAAV;AAAsB,QAAA,GAAG,EAAC,YAA1B;AAAuC,QAAA,SAAS,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF,eAsBE;AAAA,gBAAIP;AAAJ;AAAA;AAAA;AAAA;AAAA,YAtBF,eAuBE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEQ,KAAV;AAAiB,QAAA,GAAG,EAAC,OAArB;AAA6B,QAAA,SAAS,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF,eA2BE;AAAQ,MAAA,EAAE,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BF,eA4BE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GA3CQT,K;UACiCD,oB;;;KADjCC,K;AA6CT,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Nav from \"./Navbar.jsx\";\nimport microphone from \"../images/microphone.svg\";\nimport write from \"../images/write.svg\";\n\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from \"react-speech-recognition\";\n\nfunction Speak() {\n  const { transcript, resetTranscript } = useSpeechRecognition();\n\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return null;\n  }\n\n  // const [recording, setRecording] = React.useState(false);\n  function toggleRecording() {\n    // setRecording(!recording);\n  }\n  return (\n    <div>\n      <p>Go back</p>\n      <p>To: </p>\n      <div className=\"spokenWords\">\n        <button\n          onClick={SpeechRecognition.startListening({\n            continuous: true,\n          })}\n        >\n          Start\n        </button>\n        <button onClick={SpeechRecognition.stopListening}>Stop</button>\n        <button onClick={resetTranscript}>Reset</button>\n\n        <button id=\"microphone\" onClick={toggleRecording}>\n          Recording\n        </button>\n        <img src={microphone} alt=\"microphone\" className=\"icon\"></img>\n        {/* <button id=\"stopRecording\">Stop Recording</button>\n           <img src={microphone} alt=\"microphone\" className=\"icon\"></img>  */}\n      </div>\n      <p>Press here to type your message</p>\n      <p>{transcript}</p>\n      <Link to=\"/write\">\n        <img src={write} alt=\"write\" className=\"icon\"></img>\n        <div>Write</div>\n      </Link>\n      <button id=\"send\">Send</button>\n      <Nav />;\n    </div>\n  );\n}\n\nexport default Speak;\n"]},"metadata":{},"sourceType":"module"}