{"ast":null,"code":"var _jsxFileName = \"/Users/nafisa/final-project-telegran/client/src/components/Write.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Nav from \"./Navbar.jsx\";\nimport voice from \"../images/voice.svg\";\nimport send from \"../images/send.svg\";\nimport profile from \"../images/profile.svg\"; // const dotenv = require(\"dotenv\");\n// dotenv.config();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Write() {\n  _s();\n\n  const [messageContent, setMessageContent] = React.useState(\"\");\n  console.log(messageContent);\n  let testMessage = {\n    channel: `${process.env.SLACK_CHANNEL_ID}`,\n    text: `${messageContent}`\n  };\n\n  function sendSlackbotStartMsg(messageData) {\n    fetch(`${process.env.INCOMING_WEBHOOK_URL}`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: \"Bearer \" + process.env.BOT_USER_OAUTH_TOKEN\n      },\n      body: JSON.stringify(messageData)\n    }).then(response => {\n      if (!response.ok) throw new Error(response.status);\n      return response;\n    }).then(res => console.log(res.status, res.statusText)).catch(error => console.error(error));\n  }\n\n  sendSlackbotStartMsg(testMessage);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/messages\",\n        children: \"Go back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messageTo\",\n        children: [\"To: Jo\", /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"avatar\",\n          src: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"#\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Start typing...\",\n          onChange: event => setMessageContent(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/success\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: send\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), \"Send\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"msgButtons\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/speak\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: voice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Press here to speak your message \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Write, \"NdvfnQNPJ2zTbOZXKsUckYeUfqs=\");\n\n_c = Write;\nexport default Write;\n\nvar _c;\n\n$RefreshReg$(_c, \"Write\");","map":{"version":3,"sources":["/Users/nafisa/final-project-telegran/client/src/components/Write.jsx"],"names":["React","Link","withRouter","Nav","Write","messageContent","setMessageContent","useState","console","log","testMessage","channel","process","env","SLACK_CHANNEL_ID","text","sendSlackbotStartMsg","messageData","fetch","INCOMING_WEBHOOK_URL","method","headers","Authorization","BOT_USER_OAUTH_TOKEN","body","JSON","stringify","then","response","ok","Error","status","res","statusText","catch","error","profile","event","target","value","send","voice"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Nav from \"./Navbar.jsx\";\nimport voice from \"../images/voice.svg\";\nimport send from \"../images/send.svg\";\nimport profile from \"../images/profile.svg\";\n// const dotenv = require(\"dotenv\");\n// dotenv.config();\n\nfunction Write() {\n  const [messageContent, setMessageContent] = React.useState(\"\");\n  console.log(messageContent);\n  let testMessage = {\n    channel: `${process.env.SLACK_CHANNEL_ID}`,\n    text: `${messageContent}`,\n  };\n\n  function sendSlackbotStartMsg(messageData) {\n    fetch(`${process.env.INCOMING_WEBHOOK_URL}`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: \"Bearer \" + process.env.BOT_USER_OAUTH_TOKEN,\n      },\n      body: JSON.stringify(messageData),\n    })\n      .then((response) => {\n        if (!response.ok) throw new Error(response.status);\n        return response;\n      })\n      .then((res) => console.log(res.status, res.statusText))\n      .catch((error) => console.error(error));\n  }\n\n  sendSlackbotStartMsg(testMessage);\n\n  return (\n    <>\n      <button>\n        <a href=\"/messages\">Go back</a>\n      </button>\n      <div className=\"messageContainer\">\n        <div className=\"messageTo\">\n          To: Jo\n          <img className=\"avatar\" src={profile}></img>\n        </div>\n        <form action=\"#\">\n          <textarea\n            placeholder=\"Start typing...\"\n            onChange={(event) => setMessageContent(event.target.value)}\n          ></textarea>\n          <button type=\"submit\">\n            <a href=\"/success\">\n              <img src={send}></img>\n              Send\n            </a>\n          </button>\n        </form>\n        <div className=\"msgButtons\">\n          <a href=\"/speak\">\n            {/* we should change this to be state based rather than page */}\n            <img src={voice}></img>\n            <span>Press here to speak your message </span>\n          </a>\n        </div>\n      </div>\n      <Nav />\n    </>\n  );\n}\n\nexport default Write;\n"]},"metadata":{},"sourceType":"module"}