{"version":3,"sources":["logo.png","components/Button.style.js","components/Container.style.js","components/Home.jsx","components/Connect.jsx","components/Video.jsx","components/Tutorial.jsx","images/envelope.svg","images/sos.svg","images/write.svg","components/Navbar.jsx","components/Nav.style.jsx","components/Welcome.jsx","components/Success.jsx","images/profile.svg","components/ReceivedMessage.jsx","components/Message.style.js","components/Messages.jsx","images/microphone.svg","components/Speak.jsx","images/voice.svg","components/MessageContainer.style.jsx","images/send.svg","components/Write.jsx","components/Emergency.jsx","images/cancelcross.svg","components/Emergency.style.js","components/MessageSent.jsx","App.js","serviceWorker.js","index.js"],"names":["Button","styled","button","AppContainer","div","Home","src","logo","alt","type","to","className","Connect","Video","width","height","controls","Tutorial","Navbar","props","envelope","write","sos","NavContainer","Welcome","Success","useWindowSize","ReceivedMessage","Avatar","messageTime","messageName","messageContent","StyledMessage","fetch","require","Messages","React","useState","messageData","setMessageData","useEffect","then","response","json","data","catch","error","console","slackMessages","map","msg","index","log","Math","floor","random","text","Speak","useSpeechRecognition","transcript","resetTranscript","SpeechRecognition","browserSupportsSpeechRecognition","onClick","startListening","continuous","stopListening","id","microphone","MessageContainer","MessageTop","MessageText","MessageButtons","Write","timeout","setMessageContent","href","profile","onSubmit","event","message","preventDefault","method","body","JSON","stringify","headers","onChange","target","value","rows","cols","name","placeholder","voice","EmergencyContainer","Emergency","timer","setTimer","setTimeout","sendSOS","cancel","clearTimeout","MessageSent","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.487ecd70.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.03f21e88.png\";","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  width: 200px;\n  height: 50px;\n  background-color: #73e3c8;\n  margin-top: 2rem;\n  border-radius: 30px;\n  border: none;\n`;\n","import styled from \"styled-components\";\n\nexport const AppContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: #f4f0f0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport logo from \"../logo.png\";\n\nimport { Button } from \"./Button.style.js\";\nimport { AppContainer } from \"./Container.style\";\n\nfunction Home() {\n  return (\n    <AppContainer>\n      <header>\n        <img src={logo} alt=\"logo\" />\n      </header>\n\n      <Button type=\"submit\">\n        {\" \"}\n        <Link to=\"/connect\" className=\"text-link\">\n          Get Started\n        </Link>\n      </Button>\n    </AppContainer>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport logo from \"../logo.png\";\nimport { AppContainer } from \"./Container.style\";\n\nfunction Connect() {\n  return (\n    <AppContainer>\n      <header>\n        <img src={logo} alt=\"logo\" />\n        {/* <p>{!data ? \"Loading...\" : data}</p> */}\n      </header>\n      <h1>Connect to Slack Workspace</h1>\n      <form>\n        <label>Workspace ID:</label>\n        <input></input>\n      </form>\n      <button type=\"submit\">\n        {\" \"}\n        <Link to=\"/connection-success\" className=\"text-link\">\n          Connect\n        </Link>\n      </button>\n    </AppContainer>\n  );\n}\n\nexport default Connect;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { AppContainer } from \"./Container.style\";\n\nfunction Video() {\n  return (\n    <AppContainer>\n      <h1>Tutorial</h1>\n      <div>\n        <video width=\"320\" height=\"240\" controls>\n          <source src=\"movie.mp4\" type=\"video/mp4\" />\n        </video>\n        <div>\n          <button type=\"submit\">\n            <Link to=\"/tutorial\" className=\"text-link\">\n              Written Tutorial\n            </Link>\n          </button>\n          <button type=\"submit\">\n            <Link to=\"/welcome\" className=\"text-link\">\n              Skip\n            </Link>\n          </button>\n        </div>\n      </div>\n    </AppContainer>\n  );\n}\n\nexport default Video;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { AppContainer } from \"./Container.style\";\n\nfunction Tutorial() {\n  return (\n    <AppContainer>\n      <h1>Tutorial</h1>\n      <div>\n        <ol>\n          <li>text</li>\n          <li>text</li>\n          <li>text</li>\n          <li>text</li>\n          <li>text</li>\n        </ol>\n        <div>\n          <button type=\"submit\">\n            <Link to=\"/video\" className=\"text-link\">\n              Video Tutorial\n            </Link>\n          </button>\n          <button type=\"submit\">\n            <Link to=\"/welcome\" className=\"text-link\">\n              Skip\n            </Link>\n          </button>\n        </div>\n      </div>\n    </AppContainer>\n  );\n}\n\nexport default Tutorial;\n","export default __webpack_public_path__ + \"static/media/envelope.a3ea37af.svg\";","export default __webpack_public_path__ + \"static/media/sos.36d46631.svg\";","export default __webpack_public_path__ + \"static/media/write.0b016300.svg\";","// import React from \"react\";\n// import cancel from \"../images/cancelcross.svg\";\n// import { Link, withRouter } from \"react-router-dom\";\n// import Nav from \"./Navbar.jsx\";\n// import { EmergencyContainer } from \"./Emergency.style\";\n\n// function Emergency() {\n//   return (\n//     <EmergencyContainer>\n//       <div>\n//         <p>Sending SOS in 10 seconds</p>\n//         <img src={cancel} alt=\"logo\" />\n//         <button type=\"submit\">\n//           {\" \"}\n//           <Link to=\"/welcome\">Cancel SOS Call</Link>\n//         </button>\n//       </div>\n//       <Nav />\n//     </EmergencyContainer>\n//   );\n// }\n\n// export default Emergency;\n\nimport React, { useState } from \"react\";\nimport envelope from \"../images/envelope.svg\";\nimport sos from \"../images/sos.svg\";\nimport write from \"../images/write.svg\";\nimport \"../global.css\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nfunction Navbar(props) {\n  return (\n    <div className=\"nav\">\n      <Link to=\"/messages\" className=\"text-link\">\n        <img src={envelope} alt=\"envelope\" className=\"icon\"></img>\n        <div>Messages</div>\n      </Link>\n      <Link to=\"/write\" className=\"text-link\">\n        <img width=\"100%\" src={write} alt=\"write\" className=\"icon\"></img>\n        <div>Write</div>\n      </Link>\n      <Link to=\"/emergency\" className=\"text-link\">\n        <img src={sos} alt=\"emergency\" className=\"icon\"></img>\n        <div>Emergency</div>\n      </Link>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import styled from \"styled-components\";\n\nexport const NavContainer = styled.div`\n  width: 100vw;\n  height: 100px;\n  background-color: #73e3c8;\n  margin-top: 2rem;\n  bottom: 0;\n  position: fixed;\n`;\n","import React from \"react\";\n// import { Link, withRouter } from \"react-router-dom\";\nimport logo from \"../logo.png\";\nimport Nav from \"./Navbar.jsx\";\nimport { NavContainer } from \"./Nav.style\";\nimport { AppContainer } from \"./Container.style\";\n\nfunction Welcome() {\n  return (\n    <AppContainer>\n      <header>\n        <img src={logo} alt=\"logo\" />\n      </header>\n      <NavContainer>\n        <Nav />\n      </NavContainer>\n    </AppContainer>\n  );\n}\n\nexport default Welcome;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { useWindowSize } from \"@react-hook/window-size\";\nimport Confetti from \"react-confetti\";\nimport { AppContainer } from \"./Container.style\";\n\nfunction Success() {\n  const { width, height } = useWindowSize();\n\n  return (\n    <AppContainer>\n      <Confetti width={width} height={height} />\n      <h1>\n        {\" \"}\n        <Link to=\"/video\">Successfully Connected </Link>{\" \"}\n      </h1>\n    </AppContainer>\n  );\n}\n\nexport default Success;\n","export default __webpack_public_path__ + \"static/media/profile.7cbe0d9e.svg\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Avatar from \"../images/profile.svg\";\n\nfunction ReceivedMessage(props) {\n  return (\n    <>\n      <div className=\"parent\">\n        <img className=\"avatar\" src={Avatar} alt=\"avatar\"></img>\n        <div className=\"time\">{props.messageTime} </div>\n        <div className=\"name\">{props.messageName} </div>\n        <div className=\"content\">{props.messageContent} </div>\n      </div>\n    </>\n  );\n}\n\nexport default ReceivedMessage;\n","import styled from \"styled-components\";\n\nexport const MessagesListContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: #f4f0f0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const StyledMessage = styled.div`\n  .parent {\n    padding-right: 1rem;\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: repeat(2, 1fr);\n    grid-column-gap: 10px;\n    grid-row-gap: 10px;\n    line-height: 2rem;\n    background-color: #febeb5;\n    margin-bottom: 1rem;\n    align-items: center;\n  }\n\n  .avatar {\n    grid-area: 1 / 1 / 3 / 2;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .time {\n    grid-area: 1 / 2 / 2 / 3;\n  }\n  .name {\n    grid-area: 1 / 3 / 2 / 4;\n    font-weight: bold;\n    font-size: 1.3rem;\n  }\n  .content {\n    grid-area: 2 / 2 / 3 / 4;\n  }\n`;\n","import React, { useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Nav from \"./Navbar.jsx\";\nimport ReceivedMessage from \"./ReceivedMessage.jsx\";\nimport { StyledMessage } from \"./Message.style\";\nimport { AppContainer } from \"./Container.style\";\nimport { NavContainer } from \"./Nav.style\";\n// import Avatar from \"../images/profile.svg\";\nconst fetch = require(\"node-fetch\");\n\nfunction Messages() {\n  const [messageData, setMessageData] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(\"/api/read-messages\", {})\n      .then((response) => response.json())\n      .then((data) => setMessageData(data))\n      .catch((error) => console.error(\"Oops message not received!\", error));\n  }, []);\n\n  // const fakeData = [\n  //   {\n  //     name: \"Nafisa\",\n  //     timestamp: \"07/06/2021, 11.00am\",\n  //     messageContent: \"Hi gran how are you\",\n  //   },\n  //   {\n  //     name: \"Chisha\",\n  //     timestamp: \"06/06/2021, 10.00am\",\n  //     messageContent: \"Love u grandad\",\n  //   },\n  // ];\n\n  // const NUM_OF_MESSAGES = 4;\n\n  function messageName() {\n    let names = [\n      \"Chisha\",\n      \"Chun\",\n      \"Jo\",\n      \"Nafisa\",\n      \"Chisha\",\n      \"Chun\",\n      \"Jo\",\n      \"Nafisa\",\n      \"Chisha\",\n      \"Chun\",\n    ];\n    let index = Math.floor(Math.random() * 10);\n    return names[index];\n  }\n\n  const slackMessages = messageData.map((msg, index) => {\n    console.log(msg);\n    return (\n      <StyledMessage>\n        {/* <div>{messageData}</div> */}\n        <ReceivedMessage\n          key={index}\n          // messageAvatar={messageData.map((msg) => msg.avatar)[index]}\n          messageName={messageName()}\n          messageTime=\"01/01/2021\"\n          messageContent={messageData.map((msg) => msg.text)[index]}\n          // setMessageData={setMessageData}\n        />\n      </StyledMessage>\n    );\n  });\n\n  return (\n    <AppContainer>\n      <div>{slackMessages}</div>\n      <Link to=\"/message1\">Read message</Link>\n      {/* <button onClick={retrievedMessages}>Button</button> */}\n      <NavContainer>\n        <Nav />\n      </NavContainer>\n    </AppContainer>\n  );\n}\n\nexport default Messages;\n","export default __webpack_public_path__ + \"static/media/microphone.4799baf2.svg\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Nav from \"./Navbar.jsx\";\nimport microphone from \"../images/microphone.svg\";\nimport write from \"../images/write.svg\";\nimport { AppContainer } from \"./Container.style\";\n\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from \"react-speech-recognition\";\n\nfunction Speak() {\n  const { transcript, resetTranscript } = useSpeechRecognition();\n\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return <h1>Your browser does not support Speech recognition. </h1>;\n  }\n\n  // const [recording, setRecording] = React.useState(false);\n  function toggleRecording() {\n    // setRecording(!recording);\n  }\n  return (\n    <AppContainer>\n      <p>Go back</p>\n      <p>To: </p>\n      <div className=\"spokenWords\">\n        <button\n          onClick={SpeechRecognition.startListening({\n            continuous: true,\n          })}\n        >\n          Start\n        </button>\n        <button onClick={SpeechRecognition.stopListening}>Stop</button>\n        <button onClick={resetTranscript}>Reset</button>\n\n        <button id=\"microphone\" onClick={toggleRecording}>\n          Recording\n        </button>\n        <img src={microphone} alt=\"microphone\" className=\"icon\"></img>\n        {/* <button id=\"stopRecording\">Stop Recording</button>\n           <img src={microphone} alt=\"microphone\" className=\"icon\"></img>  */}\n      </div>\n      <p>Press here to type your message</p>\n      <p>{transcript}</p>\n      <Link to=\"/write\">\n        <img src={write} alt=\"write\" className=\"icon\"></img>\n        <div>Write</div>\n      </Link>\n      <button id=\"send\">Send</button>\n      <Nav />;\n    </AppContainer>\n  );\n}\n\nexport default Speak;\n","export default __webpack_public_path__ + \"static/media/voice.dc35d400.svg\";","import styled from \"styled-components\";\n\nexport const MessageContainer = styled.div`\n  width: 50vw;\n  height: 50vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.5rem;\n`;\n\nexport const MessageTop = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: baseline;\n  margin-bottom: 1rem;\n`;\n\nexport const MessageText = styled.div`\n  /* width: 100%; */\n  height: 100%;\n`;\n\nexport const MessageButtons = styled.div`\n  width: 100%;\n  flex-direction: row;\n  font-size: 1rem;\n`;\n","export default __webpack_public_path__ + \"static/media/send.10757a8d.svg\";","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Nav from \"./Navbar.jsx\";\nimport voice from \"../images/voice.svg\";\nimport send from \"../images/send.svg\";\nimport profile from \"../images/profile.svg\";\nimport { NavContainer } from \"./Nav.style.jsx\";\nimport { AppContainer } from \"./Container.style\";\nimport {\n  MessageContainer,\n  MessageTop,\n  MessageText,\n  MessageButtons,\n} from \"./MessageContainer.style.jsx\";\nconst fetch = require(\"node-fetch\");\n\nfunction Write() {\n  const [messageContent, setMessageContent] = React.useState(\"\");\n\n  function handleSubmit(event) {\n    console.log(\"handle submit in write\")\n    const message = messageContent;\n    event.preventDefault();\n    fetch(\"/api/write-message\", {\n      method: \"POST\",\n      body: JSON.stringify({ message }),\n      headers: { \"content-type\": \"application/json\" },\n    })\n      .then((response) => {\n        response.json();\n        return <Redirect to=\"/message-sent\"/>\n      })\n      .catch((error) => console.error(\"Oops!\", error));\n  }\n\n  return (\n    <div>\n      <button>\n        <a href=\"/messages\" className=\"text-link\">\n          Go back\n        </a>\n      </button>\n      <AppContainer>\n        <MessageContainer>\n          <MessageTop>\n            <span>To:</span>\n            <span></span>\n            Jo<img className=\"avatar\" src={profile}></img>\n          </MessageTop>\n          <MessageText>\n            <form\n              onSubmit={handleSubmit}\n              onChange={(event) => setMessageContent(event.target.value)}\n            >\n              <textarea\n                rows=\"15\"\n                cols=\"50\"\n                id=\"text\"\n                name=\"text\"\n                placeholder=\"Start typing...\"\n              ></textarea>\n              <p>\n                <button type=\"submit\">Submit</button>  \n              </p>\n            </form>\n          </MessageText>\n          <MessageButtons>\n            <div className=\"msgButtons\">\n              <a href=\"/speak\">\n                {/* we should change this to be state based rather than page */}\n                <img src={voice}></img>\n                <span>Press here to speak your message</span>\n              </a>\n            </div>\n          </MessageButtons>\n        </MessageContainer>\n        <NavContainer>\n          <Nav />\n        </NavContainer>\n      </AppContainer>\n    </div>\n  );\n}\n\nexport default Write;\n\n//  <form action=\"post-review\" method=\"POST\"\n","import React from \"react\";\nimport cancel from '../images/cancelcross.svg';\nimport { Link, withRouter } from \"react-router-dom\";\nimport Nav from \"./Navbar.jsx\";\nimport { NavContainer } from \"./Nav.style\";\nimport { EmergencyContainer } from \"./Emergency.style\";\nimport sos from \"../images/sos.svg\";\nconst fetch = require(\"node-fetch\");\nlet timeout;\n\nfunction Emergency() {\n  const [timer, setTimer] = React.useState(10);\n\n  React.useEffect(() => {\n    timeout = setTimeout(() => {\n      if (timer > 0) {\n        setTimer(timer - 1);\n      } else {\n        sendSOS();\n      }\n    }, 1000);\n  });\n\n  function sendSOS() {\n    // const message = event.target.message.value;\n    const message = \"SOS: Please call me\";\n    fetch(\"/api/write-message\", {\n      method: \"POST\",\n      body: JSON.stringify({ message }),\n      headers: { \"content-type\": \"application/json\" },\n    })\n      .then((response) => {\n        response.json();\n      })\n      .catch((error) => console.error(\"Oops!\", error));\n  }\n\n  function stopTimer() {\n    if (timer > 0) {\n      clearTimeout(timeout);\n    }\n  }\n\n  console.log(timer);\n  return (\n    <div>\n      <EmergencyContainer>\n        <div className=\"sos-page\">\n          <p> Sending </p>\n          <img src={sos} />\n          <p>\n            {\" \"}\n            in\n            <span> {timer} </span>\n            seconds{\" \"}\n          </p>\n          <img src={cancel} alt=\"logo\" />\n          <div>\n            <button type=\"submit\">\n              {\" \"}\n              <Link to=\"/welcome\" className=\"text-link\" onClick={stopTimer}>\n                Cancel SOS Call\n              </Link>\n            </button>\n          </div>\n        </div>\n      </EmergencyContainer>\n\n      <NavContainer>\n        <Nav />\n      </NavContainer>\n    </div>\n  );\n}\n\nexport default Emergency;\n","export default __webpack_public_path__ + \"static/media/cancelcross.535d47a0.svg\";","import styled from \"styled-components\";\nimport cancelcross from \"../images/cancelcross.svg\";\n\nexport const EmergencyContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: #ff5c5c;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  color: #ffffff;\n  font-size: 2rem;\n  font-weight: 700;\n`;\n\nexport const CancelCross = styled.div`\n  width: 25%;\n  height: 25vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { useWindowSize } from \"@react-hook/window-size\";\nimport Confetti from \"react-confetti\";\nimport { AppContainer } from \"./Container.style\";\n\nfunction MessageSent() {\n  const { width, height } = useWindowSize();\n  return (\n    <AppContainer>\n      <Confetti width={width} height={height} />\n      <h1>\n        {\" \"}\n        <Link to=\"/welcome\">Message Sent </Link>{\" \"}\n      </h1>\n    </AppContainer>\n  );\n}\n\nexport default MessageSent;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Home from \"./components/Home.jsx\";\nimport Connect from \"./components/Connect.jsx\";\nimport Video from \"./components/Video.jsx\";\nimport Tutorial from \"./components/Tutorial.jsx\";\nimport Welcome from \"./components/Welcome.jsx\";\nimport Success from \"./components/Success.jsx\";\nimport Messages from \"./components/Messages.jsx\";\nimport Speak from \"./components/Speak.jsx\";\nimport Write from \"./components/Write.jsx\";\nimport Emergency from \"./components/Emergency.jsx\";\nimport ReceivedMessage from \"./components/ReceivedMessage.jsx\";\nimport MessageSent from \"./components/MessageSent.jsx\";\n\nfunction App() {\n  \n  const [messageContent, setMessageContent] = React.useState(\"\");\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={() => <Home />} />\n          <Route path=\"/connect\" exact component={() => <Connect />} />\n          <Route\n            path=\"/connection-success\"\n            exact\n            component={() => <Success />}\n          />\n          <Route path=\"/video\" exact component={() => <Video />} />\n          <Route path=\"/tutorial\" exact component={() => <Tutorial />} />\n          <Route path=\"/welcome\" exact component={() => <Welcome />} />\n          <Route path=\"/messages\" exact component={() => <Messages />} />\n          <Route path=\"/message1\" exact component={() => <ReceivedMessage />} />\n          <Route path=\"/speak\" exact component={() => <Speak />} />\n          <Route path=\"/success\" exact component={() => <Success />} />\n          <Route path=\"/message-sent\" exact component={() => <MessageSent />} />\n          <Route\n            path=\"/write\"\n            exact\n            component={() => (\n              <Write\n                messageContent={messageContent}\n                setMessageContent={setMessageContent}\n              />\n            )}\n          />\n          <Route path=\"/emergency\" exact component={() => <Emergency />} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}