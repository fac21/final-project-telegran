{"version":3,"sources":["images/write.svg","images/envelope.svg","images/sos.svg","images/microphone.svg","images/voice.svg","images/profile.svg","images/cancelcross.svg","images/send.svg","components/Button.style.js","components/Container.style.js","components/Home.jsx","components/Navbar.jsx","components/Connect.jsx","components/Video.jsx","components/Tutorial.jsx","components/Welcome.jsx","components/Success.jsx","components/Messages.jsx","components/Speak.jsx","components/Write.jsx","components/Emergency.style.js","components/Emergency.jsx","App.js","serviceWorker.js","index.js","logo.png"],"names":["module","exports","Button","styled","button","AppContainer","div","Home","src","logo","alt","type","to","Navbar","props","className","envelope","write","sos","Connect","Video","width","height","controls","Tutorial","Welcome","Success","Messages","Speak","useSpeechRecognition","transcript","resetTranscript","SpeechRecognition","browserSupportsSpeechRecognition","onClick","startListening","continuous","stopListening","id","microphone","fetch","require","Write","React","useState","messageContent","setMessageContent","console","log","href","profile","onSubmit","event","message","preventDefault","method","body","JSON","stringify","headers","then","response","json","catch","error","onChange","target","value","name","placeholder","voice","EmergencyContainer","Emergency","cancel","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.285690eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/write.50ddd7f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/envelope.33e133ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/sos.b8faa62d.svg\";","module.exports = __webpack_public_path__ + \"static/media/microphone.967803c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/voice.61193501.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile.bbfeb13d.svg\";","module.exports = __webpack_public_path__ + \"static/media/cancelcross.8c08a248.svg\";","module.exports = __webpack_public_path__ + \"static/media/send.da8fc977.svg\";","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  width: 200px;\n  height: 50px;\n  background-color: #73e3c8;\n  margin-top: 2rem;\n  border-radius: 30px;\n  border: none;\n`;\n","import styled from \"styled-components\";\n\nexport const AppContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: #f4f0f0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport logo from \"../logo.png\";\n\nimport { Button } from \"./Button.style.js\";\nimport { AppContainer } from \"./Container.style\";\n\nfunction Home() {\n  return (\n    <AppContainer>\n      <header>\n        <img src={logo} alt=\"logo\" />\n      </header>\n\n      <Button type=\"submit\">\n        {\" \"}\n        <Link to=\"/connect\">Get Started</Link>\n      </Button>\n    </AppContainer>\n  );\n}\n\nexport default Home;\n","// import React from \"react\";\n// import cancel from \"../images/cancelcross.svg\";\n// import { Link, withRouter } from \"react-router-dom\";\n// import Nav from \"./Navbar.jsx\";\n// import { EmergencyContainer } from \"./Emergency.style\";\n\n// function Emergency() {\n//   return (\n//     <EmergencyContainer>\n//       <div>\n//         <p>Sending SOS in 10 seconds</p>\n//         <img src={cancel} alt=\"logo\" />\n//         <button type=\"submit\">\n//           {\" \"}\n//           <Link to=\"/welcome\">Cancel SOS Call</Link>\n//         </button>\n//       </div>\n//       <Nav />\n//     </EmergencyContainer>\n//   );\n// }\n\n// export default Emergency;\n\nimport React, { useState } from \"react\";\nimport envelope from \"../images/envelope.svg\";\nimport sos from \"../images/sos.svg\";\nimport write from \"../images/write.svg\";\nimport \"../global.css\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nfunction Navbar(props) {\n  return (\n    <div className=\"nav\">\n      <Link to=\"/messages\">\n        <img src={envelope} alt=\"envelope\" className=\"icon\"></img>\n        <div>Messages</div>\n      </Link>\n      <Link to=\"/write\">\n        <img src={write} alt=\"write\" className=\"icon\"></img>\n        <div>Write</div>\n      </Link>\n      <Link to=\"/emergency\">\n        <img src={sos} alt=\"emergency\" className=\"icon\"></img>\n        <div>Emergency</div>\n      </Link>\n    </div>\n  );\n}\n\nexport default Navbar;\n\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport logo from \"../logo.png\";\nimport { AppContainer } from \"./Container.style\";\n\nfunction Connect() {\n  return (\n    <AppContainer>\n      <header>\n        <img src={logo} alt=\"logo\" />\n        {/* <p>{!data ? \"Loading...\" : data}</p> */}\n      </header>\n      <h1>Connect to Slack Workspace</h1>\n      <form>\n        <label>Workspace ID:</label>\n        <input></input>\n      </form>\n      <button type=\"submit\">\n        {\" \"}\n        <Link to=\"/connection-success\">Connect</Link>\n      </button>\n    </AppContainer>\n  );\n}\n\nexport default Connect;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nfunction Video() {\n  return (\n    <>\n      <h1>Tutorial</h1>\n      <div>\n        <video width=\"320\" height=\"240\" controls>\n          <source src=\"movie.mp4\" type=\"video/mp4\" />\n        </video>\n        <div>\n          <button type=\"submit\">\n            <Link to=\"/tutorial\">Written Tutorial</Link>\n          </button>\n          <button type=\"submit\">\n            <Link to=\"/welcome\">Skip</Link>\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Video;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nfunction Tutorial() {\n  return (\n    <>\n      <h1>Tutorial</h1>\n      <div>\n        <ol>\n          <li>text</li>\n          <li>text</li>\n          <li>text</li>\n          <li>text</li>\n          <li>text</li>\n        </ol>\n        <div>\n          <button type=\"submit\">\n            <Link to=\"/video\">Video Tutorial</Link>\n          </button>\n          <button type=\"submit\">\n            <Link to=\"/welcome\">Skip</Link>\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Tutorial;\n","import React from \"react\";\n// import { Link, withRouter } from \"react-router-dom\";\nimport logo from \"../logo.png\";\nimport Nav from \"./Navbar.jsx\";\nimport { AppContainer } from \"./Container.style\";\n\nfunction Welcome() {\n  return (\n    <AppContainer>\n      <header>\n        <img src={logo} alt=\"logo\" />\n      </header>\n\n      <Nav />\n    </AppContainer>\n  );\n}\n\nexport default Welcome;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nfunction Success() {\n  return (\n    <div>\n      <h1>\n        {\" \"}\n        <Link to=\"/video\">Successfully Connected </Link>{\" \"}\n      </h1>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Nav from \"./Navbar.jsx\";\n\nfunction Messages() {\n  return <Nav />;\n}\n\nexport default Messages;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Nav from \"./Navbar.jsx\";\nimport microphone from \"../images/microphone.svg\";\nimport write from \"../images/write.svg\";\n\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from \"react-speech-recognition\";\n\nfunction Speak() {\n  const { transcript, resetTranscript } = useSpeechRecognition();\n\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return (\n      <h1>Your browser does not support Speech recognition. </h1>\n    );\n  }\n\n  // const [recording, setRecording] = React.useState(false);\n  function toggleRecording() {\n    // setRecording(!recording);\n  }\n  return (\n    <div>\n      <p>Go back</p>\n      <p>To: </p>\n      <div className=\"spokenWords\">\n        <button\n          onClick={SpeechRecognition.startListening({\n            continuous: true,\n          })}\n        >\n          Start\n        </button>\n        <button onClick={SpeechRecognition.stopListening}>Stop</button>\n        <button onClick={resetTranscript}>Reset</button>\n\n        <button id=\"microphone\" onClick={toggleRecording}>\n          Recording\n        </button>\n        <img src={microphone} alt=\"microphone\" className=\"icon\"></img>\n        {/* <button id=\"stopRecording\">Stop Recording</button>\n           <img src={microphone} alt=\"microphone\" className=\"icon\"></img>  */}\n      </div>\n      <p>Press here to type your message</p>\n      <p>{transcript}</p>\n      <Link to=\"/write\">\n        <img src={write} alt=\"write\" className=\"icon\"></img>\n        <div>Write</div>\n      </Link>\n      <button id=\"send\">Send</button>\n      <Nav />;\n    </div>\n  );\n}\n\nexport default Speak;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Nav from \"./Navbar.jsx\";\nimport voice from \"../images/voice.svg\";\nimport send from \"../images/send.svg\";\nimport profile from \"../images/profile.svg\";\nconst fetch = require(\"node-fetch\");\n// const dotenv = require(\"dotenv\");\n// dotenv.config();\n\nfunction Write() {\n  const [messageContent, setMessageContent] = React.useState(\"\");\n  console.log(\"message content\", messageContent)\n  // let testMessage = {\n  //   channel: `${process.env.REACT_APP_SLACK_CHANNEL_ID}`,\n  //   text: `${messageContent}`,\n  // };\n\n  // function sendSlackbotStartMsg(messageData) {\n  //   console.log(process.env.REACT_APP_INCOMING_WEBHOOK_URL)\n  //   fetch(`${process.env.REACT_APP_INCOMING_WEBHOOK_URL}`, {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"content-type\": \"application/json\",\n  //       Authorization: \"Bearer \" + process.env.REACT_APP_BOT_USER_OAUTH_TOKEN,\n  //     },\n  //     body: JSON.stringify(messageData),\n  //   })\n  //     .then((response) => {\n  //       if (!response.ok) throw new Error(response.status);\n  //       return response;\n  //     })\n  //     .then((res) => console.log(res.status, res.statusText))\n  //     .catch((error) => console.error(error));\n  // }\n\n  // function sendSlackbotStartMsg(messageData) {\n  //   fetch(`/api/slack`, {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"content-type\": \"application/json\",\n  //       Authorization: \"Bearer \" + process.env.REACT_APP_BOT_USER_OAUTH_TOKEN,\n  //     },\n  //     body: JSON.stringify(messageData),\n  //   })\n  //     .then((response) => {\n  //       if (!response.ok) throw new Error(response.status);\n  //       return response;\n  //     })\n  //     .then((res) => console.log(res.status, res.statusText))\n  //     .catch((error) => console.error(error));\n  // }\n\n  function handleSubmit(event) {\n    // const message = event.target.message.value;\n    const message = messageContent;\n    console.log(\"message\", message)\n    // const message= \"hi this is gran\"\n    event.preventDefault();\n    fetch('/api/slack', {\n      method: \"POST\",\n      body: JSON.stringify({ message }),\n    headers: { \"content-type\": \"application/json\" },\n  })\n      .then(response => {\n        console.log(\"response\", response)\n        response.json()\n        // console.log('response.json()', response.json())\n      })\n      .catch((error) => console.error(\"Oops!\", error));\n  }\n\n  return (\n    <>\n      <button>\n        <a href=\"/messages\">Go back</a>\n      </button>\n      <div className=\"messageContainer\">\n        <div className=\"messageTo\">\n          To: Jo\n          <img className=\"avatar\" src={profile}></img>\n        </div>\n         <form onSubmit={handleSubmit} onChange={(event) => setMessageContent(event.target.value)}>\n            <textarea id=\"text\" name=\"text\" placeholder=\"Start typing...\"></textarea>\n            <button type=\"submit\">Submit</button>\n          </form>\n        {/* <form action=\"/api/slack\" method=\"POST\" onChange={(event) => setMessageContent(event.target.value)}>\n          <textarea placeholder=\"Start typing...\"></textarea>\n          <button type=\"button\" onClick={handleSubmit}>Send</button>\n          <a href=\"/success\">\n            <img src={send}></img>\n            Send\n          </a> */}\n\n          {/* <button\n            type=\"submit\"\n            onClick={() => {\n              console.log(\"works\");\n              sendSlackbotStartMsg(testMessage);\n            }}\n          ></button> */}\n        {/* </form> */}\n        <div className=\"msgButtons\">\n          <a href=\"/speak\">\n            {/* we should change this to be state based rather than page */}\n            <img src={voice}></img>\n            <span>Press here to speak your message </span>\n          </a>\n        </div>\n      </div>\n      <Nav />\n    </>\n  );\n}\n\nexport default Write;\n\n\n//  <form action=\"post-review\" method=\"POST\"","import styled from \"styled-components\";\n//import cancelcross from \"../images/cancelcross.svg\";\n\nexport const EmergencyContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: #ff5c5c;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: #ffffff;\n`;\n\nexport const CancelCross = styled.div`\n  width: 25%;\n  height: 25vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import React from \"react\";\nimport cancel from \"../images/cancelcross.svg\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Nav from \"./Navbar.jsx\";\nimport { EmergencyContainer } from \"./Emergency.style\";\n\nfunction Emergency() {\n  return (\n    <EmergencyContainer>\n      <div>\n        <p>Sending SOS in 10 seconds</p>\n        <img src={cancel} alt=\"logo\" />\n        <button type=\"submit\">\n          {\" \"}\n          <Link to=\"/welcome\">Cancel SOS Call</Link>\n        </button>\n      </div>\n      <Nav />\n    </EmergencyContainer>\n  );\n}\n\nexport default Emergency;\n","import React, { Component } from \"react\";\nimport logo from \"./logo.png\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home.jsx\";\nimport Navbar from \"./components/Navbar\";\nimport Connect from \"./components/Connect.jsx\";\nimport Video from \"./components/Video.jsx\";\nimport Tutorial from \"./components/Tutorial.jsx\";\nimport Welcome from \"./components/Welcome.jsx\";\nimport Success from \"./components/Success.jsx\";\nimport Messages from \"./components/Messages.jsx\";\nimport Speak from \"./components/Speak.jsx\";\nimport Write from \"./components/Write.jsx\";\nimport Emergency from \"./components/Emergency.jsx\";\n\nfunction App() {\n  const [messageContent, setMessageContent] = React.useState(\"\");\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={() => <Home />} />\n          <Route path=\"/connect\" exact component={() => <Connect />} />\n          <Route\n            path=\"/connection-success\"\n            exact\n            component={() => <Success />}\n          />\n          <Route path=\"/video\" exact component={() => <Video />} />\n          <Route path=\"/tutorial\" exact component={() => <Tutorial />} />\n          <Route path=\"/welcome\" exact component={() => <Welcome />} />\n          <Route path=\"/messages\" exact component={() => <Messages />} />\n          <Route path=\"/speak\" exact component={() => <Speak />} />\n          <Route\n            path=\"/write\"\n            exact\n            component={() => (\n              <Write\n                messageContent={messageContent}\n                setMessageContent={setMessageContent}\n              />\n            )}\n          />\n          <Route path=\"/emergency\" exact component={() => <Emergency />} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.476ef1fc.png\";"],"sourceRoot":""}